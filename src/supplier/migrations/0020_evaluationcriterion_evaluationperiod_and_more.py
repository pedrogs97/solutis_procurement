# Generated by Django 5.2.4 on 2025-08-29 01:48

from decimal import Decimal

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("supplier", "0019_alter_suppliersituation_supplier"),
    ]

    operations = [
        migrations.CreateModel(
            name="EvaluationCriterion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nome do Critério"),
                ),
                ("description", models.TextField(verbose_name="Descrição")),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                        verbose_name="Peso (%)",
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="Ordem"),
                ),
            ],
            options={
                "verbose_name": "Critério de Avaliação",
                "verbose_name_plural": "Critérios de Avaliação",
                "db_table": "evaluation_criterion",
                "ordering": ["order"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="EvaluationPeriod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nome do Período"),
                ),
                ("start_date", models.DateField(verbose_name="Data Início")),
                ("end_date", models.DateField(verbose_name="Data Fim")),
                (
                    "year",
                    models.PositiveSmallIntegerField(
                        editable=False, verbose_name="Ano"
                    ),
                ),
                (
                    "period_number",
                    models.PositiveSmallIntegerField(
                        help_text="Número do período no ano (1-3)",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(3),
                        ],
                        verbose_name="Número do Período",
                    ),
                ),
            ],
            options={
                "verbose_name": "Período de Avaliação",
                "verbose_name_plural": "Períodos de Avaliação",
                "db_table": "evaluation_period",
                "ordering": ["-year", "period_number"],
                "abstract": False,
                "unique_together": {("year", "period_number")},
            },
        ),
        migrations.CreateModel(
            name="SupplierEvaluation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "evaluator_name",
                    models.CharField(max_length=255, verbose_name="Nome do Avaliador"),
                ),
                (
                    "evaluation_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Data da Avaliação",
                    ),
                ),
                ("comments", models.TextField(blank=True, verbose_name="Observações")),
                (
                    "final_score",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        editable=False,
                        max_digits=5,
                        null=True,
                        verbose_name="Pontuação Final (%)",
                    ),
                ),
                (
                    "period",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations",
                        to="supplier.evaluationperiod",
                        verbose_name="Período",
                    ),
                ),
                (
                    "supplier",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="evaluations",
                        to="supplier.supplier",
                        verbose_name="Fornecedor",
                    ),
                ),
            ],
            options={
                "verbose_name": "Avaliação de Fornecedor",
                "verbose_name_plural": "Avaliações de Fornecedores",
                "db_table": "supplier_evaluation",
                "ordering": ["-evaluation_date"],
                "abstract": False,
                "unique_together": {("supplier", "period")},
            },
        ),
        migrations.CreateModel(
            name="CriterionScore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "score",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                        verbose_name="Nota (%)",
                    ),
                ),
                ("comments", models.TextField(blank=True, verbose_name="Comentários")),
                (
                    "criterion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="scores",
                        to="supplier.evaluationcriterion",
                        verbose_name="Critério",
                    ),
                ),
                (
                    "evaluation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="criterion_scores",
                        to="supplier.supplierevaluation",
                        verbose_name="Avaliação",
                    ),
                ),
            ],
            options={
                "verbose_name": "Nota de Critério",
                "verbose_name_plural": "Notas de Critérios",
                "db_table": "criterion_score",
                "abstract": False,
                "unique_together": {("evaluation", "criterion")},
            },
        ),
    ]
