name: Auto Tag on Push to Main

permissions:
  contents: write

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Extract last commit message
        id: get_message
        run: echo "message=$(git log -1 --pretty=%B)" >> $GITHUB_ENV

      - name: Debug Git State
        run: |
          git fetch --tags
          git tag --list
          git log -1

      - name: Determine version bumps
        id: determine_version
        run: |
          git fetch --tags
          echo "$(git tag --sort=-v:refname | head -n 1)"
          current_version=$(git tag --sort=-v:refname | head -n 1 || echo 'v0.0.0')
          echo "Current version: $current_version"
          echo "current_version=$current_version" >> $GITHUB_ENV

          current_version=${current_version:-v0.0.0}

          prefix="v"
          version=${current_version#$prefix}
          echo "Version without prefix: $version"

          major=$(echo "$version" | cut -d. -f1)
          minor=$(echo "$version" | cut -d. -f2)
          patch=$(echo "$version" | cut -d. -f3)

          if [[ "$message" == feat* ]]; then
            minor=$((minor + 1))
            patch=0
          elif [[ "$message" == fix* ]]; then
            patch=$((patch + 1))
          elif [[ "$message" == chore* ]]; then
            patch=$((patch + 1))
          elif [[ "$message" == version* ]]; then
            major=$((major + 1))
          else
            echo "No recognizable prefix in commit message. Skipping tagging."
            echo "skip_tag=true" >> $GITHUB_ENV
            exit 0
          fi

          new_version="${prefix}${major}.${minor}.${patch}"
          echo "New version: $new_version"
          echo "new_version=$new_version" >> $GITHUB_ENV

      - name: Create and push tag
        if: env.skip_tag != 'true'
        run: |
          git tag $new_version
          git push origin $new_version
